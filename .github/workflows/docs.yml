name: Build and Deploy Documentation to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Set up Python for Sphinx
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install Sphinx and dependencies
      run: |
        python -m pip install --upgrade pip
        pip install sphinx sphinx-rtd-theme

    - name: Build Sphinx documentation
      run: |
        cd parsnip-docs
        mvn clean compile -q
        mkdir -p ../docs-output/user-guide
        cp -r target/site/* ../docs-output/user-guide/

    - name: Build Dokka API documentation
      run: |
        cd parsnip
        mvn clean compile dokka:dokka -Prelease -q
        mkdir -p ../docs-output/api
        if [ -d target/dokka ]; then
          cp -r target/dokka/* ../docs-output/api/
        fi

    - name: Verify documentation structure
      run: |
        echo "Checking documentation build output..."
        ls -la docs-output/
        if [ ! -f "docs-output/user-guide/index.html" ]; then
          echo "ERROR: User guide index.html not found"
          exit 1
        fi
        if [ ! -f "docs-output/api/index.html" ]; then
          echo "ERROR: API documentation index.html not found"
          exit 1
        fi
        echo "✅ Documentation structure verified successfully"

    - name: Create documentation index page
      run: |
        mkdir -p docs-output
        cat > docs-output/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Parsnip Documentation</title>
            <style>
                body {
                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                    max-width: 800px;
                    margin: 0 auto;
                    padding: 40px 20px;
                    line-height: 1.6;
                    color: #333;
                }
                .header {
                    text-align: center;
                    margin-bottom: 60px;
                }
                .header h1 {
                    color: #2c5aa0;
                    margin-bottom: 10px;
                }
                .subtitle {
                    color: #666;
                    font-size: 18px;
                }
                .docs-grid {
                    display: grid;
                    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                    gap: 30px;
                    margin-top: 40px;
                }
                .doc-card {
                    border: 1px solid #e1e4e8;
                    border-radius: 8px;
                    padding: 30px;
                    text-align: center;
                    transition: box-shadow 0.2s;
                }
                .doc-card:hover {
                    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
                }
                .doc-card h2 {
                    color: #2c5aa0;
                    margin-bottom: 15px;
                }
                .doc-card p {
                    color: #666;
                    margin-bottom: 20px;
                }
                .btn {
                    display: inline-block;
                    padding: 12px 24px;
                    background: #2c5aa0;
                    color: white;
                    text-decoration: none;
                    border-radius: 6px;
                    font-weight: 500;
                    transition: background-color 0.2s;
                }
                .btn:hover {
                    background: #1e3d72;
                }
                .footer {
                    text-align: center;
                    margin-top: 60px;
                    padding-top: 30px;
                    border-top: 1px solid #e1e4e8;
                    color: #666;
                }
            </style>
        </head>
        <body>
            <div class="header">
                <h1>Parsnip Documentation</h1>
                <p class="subtitle">Easy, flexible, and highly-configurable data manipulation in JSON</p>
            </div>
            
            <div class="docs-grid">
                <div class="doc-card">
                    <h2>User Guide</h2>
                    <p>Learn how to use Parsnip for data manipulation, ETL pipelines, and transformations</p>
                    <a href="user-guide/" class="btn">Read User Guide</a>
                </div>
                
                <div class="doc-card">
                    <h2>API Documentation</h2>
                    <p>Detailed API reference for all Parsnip classes and methods</p>
                    <a href="api/" class="btn">Browse API Docs</a>
                </div>
            </div>
            
            <div class="footer">
                <p>Built with ❤️ by <a href="https://www.jhuapl.edu/">Johns Hopkins University Applied Physics Laboratory</a></p>
                <p><a href="https://github.com/aplpolaris/parsnip">View on GitHub</a></p>
            </div>
        </body>
        </html>
        EOF

    - name: Upload documentation artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: docs-output

  deploy:
    # Only run on main branch pushes, not PRs
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-docs
    
    permissions:
      pages: write
      id-token: write
      
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4